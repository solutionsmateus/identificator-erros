name: VM Identificator e Verificador de Artefatos

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      workflow_run_id:
        description: 'ID da execução para baixar artefato (apenas Job de Verificação)'
        required: false
        default: ''
      artifact_name:
        description: 'Nome do Artefato a ser baixado'
        required: false
        default: 'vm-solutions-mateus.yml' 
  schedule:
    - cron: '0 10 * * *'

jobs:
  identificator_ocr:
    runs-on: windows-latest
    
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      ARTIFACT_NAME: ocr-vm-results 
      OUTPUT_DIR: ${{ github.workspace }}/Encartes_Output # Diretório onde o identificator_complete.py deve salvar os arquivos
      HTTP_UA: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/5.0 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36
      
    strategy:
      matrix:
        scripts:
          - identificator_complete.py

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Configurar Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Instalar Dependências (Geração)
        run: |
          python -m pip install --upgrade pip
          # Dependências necessárias para o identificator_complete.py + pandas/numpy
          pip install pandas numpy openpyxl google-generativeai python-dotenv

      # Assegura que o diretório de saída exista
      - name: Criar Diretório de Saída
        run: mkdir -p ${{ env.OUTPUT_DIR }} 

      - name: Executar ${{ matrix.scripts }} (Geração de Planilhas)
        run: python ${{ matrix.scripts }} 

      # NOVO PASSO: Criar o Artefato (pasta com as planilhas)
      - name: Upload de Artefato de Resultados
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }} # Usa o nome definido acima: ocr-vm-results
          path: ${{ env.OUTPUT_DIR }} # Pasta que contém as planilhas/arquivos gerados
          retention-days: 7
          if-no-files-found: error # Se o script não gerar a pasta, o job falha


  verify_artifacts:
    runs-on: windows-latest
    needs: identificator_ocr 
    
    env:
      ARTIFACT_FOLDER: ./workflow-github-action # Diretório de download
      VERIFIER_SCRIPT: identificator_complete.py
      ARTIFACT_NAME_TO_DOWNLOAD: ${{ github.event.inputs.artifact_name || 'vm-solutions-mateus' }}
      RUN_ID_TO_DOWNLOAD: ${{ github.event.inputs.workflow_run_id || github.run_id }}

    steps:
      - name: Checkout do Código (Para pegar o script verifier)
        uses: actions/checkout@v4
        
      # 1. Baixa o Artefato Gerado no Job Anterior
      - name: Baixar Artefato Gerado
        uses: dawidd6/action-download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_TO_DOWNLOAD }}
          run_id: ${{ env.RUN_ID_TO_DOWNLOAD }}
          path: ${{ env.ARTIFACT_FOLDER }}

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Instalar Dependências (Verificação)
        run: |
          python -m pip install --upgrade pip
          # Dependências mínimas para o artifact_verifier.py
          pip install pandas openpyxl numpy

      # 3. Descompacta e Roda a Verificação
      - name: Executar Validação de Planilhas e Checagem de Duplicados
        run: |
          # O script 'artifact_verifier.py' precisa saber onde procurar
          export ARTIFACT_FOLDER=${{ env.ARTIFACT_FOLDER }} 
          python ${{ env.VERIFIER_SCRIPT }}
